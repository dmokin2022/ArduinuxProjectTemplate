include(CMakeFuncs.cmake)
include(ArduinoProject.cmake)

cmake_minimum_required(VERSION 3.12.4)
project(avr C CXX)

# Настройка для AVR
set(MCU atmega328p)
set(F_CPU 16000000UL)

# Set the correct FreeRTOS port for your system (e.g., Posix for WSL)
# set(FREERTOS_PORT GCC_POSIX CACHE STRING "Port for FreeRTOS on Posix environment")

# Set C and C++ standards
set(CMAKE_C_STANDARD 99)
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

set (CMAKE_CXX_COMPILER "avr-g++")

# option(USE_FREERTOS "Enable FreeRTOS" ON) # Turn this on to enable FreeRTOS
option(USE_FREERTOS "Enable FreeRTOS" OFF) # Turn this on to enable FreeRTOS
option(USE_ARDUINO "Enable Arduino Framework" ON)

if_use_FreeRTOS()

if_use_Arduino()


# Main include files of the project
include_directories(${PROJECT_SOURCE_DIR}/main/inc)

# Define options for LVGL with default values (OFF)
Define_options_for_LVGL_with_default_values()

# Set the output path for the executable
set(EXECUTABLE_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/bin)
set(WORKING_DIRECTORY ${PROJECT_SOURCE_DIR})

# Find and include SDL2 library
# find_package(SDL2 REQUIRED)

# Add LVGL subdirectory
# add_subdirectory(lvgl)
# target_include_directories(lvgl PUBLIC ${PROJECT_SOURCE_DIR} ${SDL2_INCLUDE_DIRS})

# set(MAIN_SOURCES src/mouse_cursor_icon.c src/hal/hal.c)
# set(MAIN_LIBS lvgl lvgl::examples lvgl::demos lvgl::thorvg ${SDL2_LIBRARIES})


# Create the main executable, depending on the FreeRTOS option
if(USE_FREERTOS)
    list(APPEND MAIN_SOURCES src/freertos_main.c src/freertos/freertos_posix_port.c ${FREERTOS_SOURCES})
    list(APPEND MAIN_LIBS freertos_config freertos_kernel)
else()
    # list(APPEND MAIN_SOURCES src/main.c)
endif()

if(USE_ARDUINO)
    list(APPEND MAIN_SOURCES Arduino/main.cpp ${UserFiles} ${ArduinoFiles})
    # list(APPEND MAIN_LIBS freertos_config freertos_kernel)
else()
    # list(APPEND MAIN_SOURCES src/main.c)
endif()




# if(NOT MSVC)
# list(APPEND MAIN_LIBS m pthread)
# endif()

# Custom target to run the executable
add_custom_target(run COMMAND ${EXECUTABLE_OUTPUT_PATH}/main DEPENDS main)

# add_lv_options_to_main_libs()


add_executable(main ${MAIN_SOURCES})

target_compile_definitions(main PRIVATE LV_CONF_INCLUDE_SIMPLE)
target_link_libraries(main ${MAIN_LIBS})

# On Windows, GUI applications do not show a console by default,
# which hides log output. This ensures a console is available for logging.


# Apply additional compile options if the build type is Debug
# if_debug_option()

if_compiled_for_windows()